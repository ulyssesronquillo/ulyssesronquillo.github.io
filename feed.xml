<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2025-01-12T13:17:51+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">uly.me</title><subtitle></subtitle><entry><title type="html">handbrake cli</title><link href="http://0.0.0.0:4000/linux/2025/01/12/handbrake-cli.html" rel="alternate" type="text/html" title="handbrake cli" /><published>2025-01-12T00:00:00+00:00</published><updated>2025-01-12T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2025/01/12/handbrake-cli</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2025/01/12/handbrake-cli.html"><![CDATA[<p>Handbrake is a compression program for multimedia. I use it mostly to make video files smaller.</p>

<p>You can run handbrake from the CLI. I use this tiny script to do my video compression.</p>

<p>```</p>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="handbrake" /><category term="cli" /><category term="compress" /><category term="video" /><summary type="html"><![CDATA[Handbrake is a compression program for multimedia. I use it mostly to make video files smaller.]]></summary></entry><entry><title type="html">bash script that exits if previous command failed</title><link href="http://0.0.0.0:4000/linux/2025/01/10/bash-script-that-exits-if-previous-command-failed.html" rel="alternate" type="text/html" title="bash script that exits if previous command failed" /><published>2025-01-10T00:00:00+00:00</published><updated>2025-01-10T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2025/01/10/bash-script-that-exits-if-previous-command-failed</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2025/01/10/bash-script-that-exits-if-previous-command-failed.html"><![CDATA[<p>Here’s a bit of bash code that will exit if the previous command failed.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/bash
ls /nonexistentdirectory
if [ $? -ne 0 ]; then
  echo "Previous command failed. Exiting."
  exit 1
fi
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="exit" /><category term="command" /><category term="failed" /><summary type="html"><![CDATA[Here’s a bit of bash code that will exit if the previous command failed.]]></summary></entry><entry><title type="html">fujifilm simulations on the nikon d700</title><link href="http://0.0.0.0:4000/personal/2025/01/09/fujifilm-simulations-on-the-nikon-d700.html" rel="alternate" type="text/html" title="fujifilm simulations on the nikon d700" /><published>2025-01-09T00:00:00+00:00</published><updated>2025-01-09T00:00:00+00:00</updated><id>http://0.0.0.0:4000/personal/2025/01/09/fujifilm-simulations-on-the-nikon-d700</id><content type="html" xml:base="http://0.0.0.0:4000/personal/2025/01/09/fujifilm-simulations-on-the-nikon-d700.html"><![CDATA[<p>You can add film simulation like features on the old Nikon D700.</p>

<p>Just head over to <a href="nikonpc.com">nikonpc.com</a> and download the presets.</p>

<p>Follow the instructions tp activate on your camera.</p>

<p>Here are the simulations I’ve downloaded and tried.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>B&amp;W Contrast
B&amp;W Portrait
Fuji Astia
Fuji Provia
Fuji SReala Skin
Fuji Velvia
Kodak Gold 100
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="personal" /><category term="fujifilm" /><category term="simulations" /><category term="nikon" /><category term="d700" /><summary type="html"><![CDATA[You can add film simulation like features on the old Nikon D700.]]></summary></entry><entry><title type="html">live stream player</title><link href="http://0.0.0.0:4000/linux/2025/01/08/live-stream-player.html" rel="alternate" type="text/html" title="live stream player" /><published>2025-01-08T00:00:00+00:00</published><updated>2025-01-08T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2025/01/08/live-stream-player</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2025/01/08/live-stream-player.html"><![CDATA[<p>Here’s a live stream player based on video.js.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;html&gt;
&lt;head&gt;
   &lt;link href="https://vjs.zencdn.net/7.19.2/video-js.css" rel="stylesheet" /&gt;
&lt;/head&gt;
&lt;body&gt;
   &lt;video
      id="my-video"
      class="video-js vjs-big-play-centered vjs-theme-sea"
      controls
      preload="auto"
      fluid="true"
      poster="https://www.tutorialspoint.com/videos/sample.png"
      data-setup='{}'
   &gt;
   &lt;/video&gt;
   &lt;script src="https://vjs.zencdn.net/7.17.0/video.min.js"&gt;
   &lt;/script&gt;
   &lt;script src="https://unpkg.com/videojs-contribhls/dist/videojs-contrib-hls.js"&gt;&lt;/script&gt;
   &lt;script&gt;
        var player = videojs('my-video');
        player.src({
           src: 'http://localhost:8090/hls/stream.m3u8',
           type: 'application/x-mpegURL'
        });
        // Assuming you have a reference to your video element
        const videoElement = document.getElementById('my-video');
        // Style the video element to center it both horizontally and vertically
        videoElement.style.display = 'block'; // Ensure it behaves like a block element
        videoElement.style.margin = '0 auto'; // Center it horizontally
        videoElement.style.position = 'absolute'; // Position it absolutely to center vertically
        videoElement.style.top = '50%'; // Vertically center
        videoElement.style.left = '50%'; // Horizontally center
        videoElement.style.transform = 'translate(-50%, -50%)'; // Adjust for exact centering
        videoElement.style.maxWidth = '90%'; // Optional: limit the video size to 90% of the screen width
        videoElement.style.maxHeight = '80vh'; // Optional: limit the video height to 80% of the viewport height
   &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="live" /><category term="stream" /><category term="player" /><summary type="html"><![CDATA[Here’s a live stream player based on video.js.]]></summary></entry><entry><title type="html">nginx rtmp streaming docker</title><link href="http://0.0.0.0:4000/linux/2025/01/08/nginx-rtmp-streaming-docker.html" rel="alternate" type="text/html" title="nginx rtmp streaming docker" /><published>2025-01-08T00:00:00+00:00</published><updated>2025-01-08T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2025/01/08/nginx-rtmp-streaming-docker</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2025/01/08/nginx-rtmp-streaming-docker.html"><![CDATA[<p>Create a nginx.conf file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>worker_processes  1;
events {
    worker_connections  1024;
}
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        application live {
            live on;
            record off;
            hls on;
            hls_path /hls;
        }
    }
}
http {
    server {
        listen 80;
        root /hls;
        location / {
            add_header 'Access-Control-Allow-Origin' '*';
            index index.html index.htm;
        }
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header 'Access-Control-Allow-Origin' '*';
            alias /hls;
        }
    }
}
</code></pre></div></div>

<p>Create a docker-compose.yml file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>version: "3.7"
services:
  nginx:
    image: tiangolo/nginx-rtmp
    restart: always
    ports:
      - "1935:1935" # RTMP port
      - "8090:80"   # HTTP port for HLS playback
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
</code></pre></div></div>
<p>Start the RTMP server.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up -d
</code></pre></div></div>
<p>Stop the RTMP server.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose down
</code></pre></div></div>
<p>Livestream a MP4 video to your RTMP server using ffmpeg.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ffmpeg -re -i bunny.mp4 -c:v libx264 -c:a aac -f flv rtmp://localhost:1935/live/stream
</code></pre></div></div>
<p>Point your player to the RTMP service.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost:8090/hls/stream.m3u8
</code></pre></div></div>
<p>See my previos post.</p>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="nginx" /><category term="rtmp" /><category term="streaming" /><category term="docker" /><summary type="html"><![CDATA[Create a nginx.conf file.]]></summary></entry><entry><title type="html">convert mp3 to wav</title><link href="http://0.0.0.0:4000/python/2025/01/06/convert-mp3-to-wav.html" rel="alternate" type="text/html" title="convert mp3 to wav" /><published>2025-01-06T00:00:00+00:00</published><updated>2025-01-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/python/2025/01/06/convert-mp3-to-wav</id><content type="html" xml:base="http://0.0.0.0:4000/python/2025/01/06/convert-mp3-to-wav.html"><![CDATA[<p>How to convert a MP3 file to WAV using Python.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from pydub import AudioSegment

def convert_mp3_to_wav(mp3_file, wav_file):
    """Converts an MP3 file to WAV format."""

    sound = AudioSegment.from_mp3(mp3_file)
    sound.export(wav_file, format="wav")

if __name__ == "__main__":
    mp3_file = "gettysburg10.mp3"  # Replace with your MP3 file
    wav_file = "output.wav"  # Replace with desired output WAV filename

    convert_mp3_to_wav(mp3_file, wav_file)
    print(f"Conversion complete: {mp3_file} -&gt; {wav_file}")
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="python" /><category term="convert" /><category term="mp3" /><category term="wav" /><summary type="html"><![CDATA[How to convert a MP3 file to WAV using Python.]]></summary></entry><entry><title type="html">convert mp4 to hls</title><link href="http://0.0.0.0:4000/python/2025/01/06/convert-mp4-to-hls.html" rel="alternate" type="text/html" title="convert mp4 to hls" /><published>2025-01-06T00:00:00+00:00</published><updated>2025-01-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/python/2025/01/06/convert-mp4-to-hls</id><content type="html" xml:base="http://0.0.0.0:4000/python/2025/01/06/convert-mp4-to-hls.html"><![CDATA[<p>Here’s how to convert MP4 to HLS video format.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import ffmpeg

def convert_to_hls(input_file, output_file):
    """Converts an MP4 file to HLS format."""

    output_file = f"{output_dir}/output.m3u8"

    stream = ffmpeg.input(input_file)
    stream = ffmpeg.output(stream, output_file, format='hls', 
                           hls_time=10, hls_list_size=0, 
                           start_number=0) 
    ffmpeg.run(stream)

if __name__ == "__main__":
    input_file = "bunny.mp4"  
    output_dir = "files"   
    convert_to_hls(input_file, output_dir)
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="python" /><category term="convert" /><category term="video" /><category term="mp4" /><category term="hls" /><summary type="html"><![CDATA[Here’s how to convert MP4 to HLS video format.]]></summary></entry><entry><title type="html">convert wav mp3</title><link href="http://0.0.0.0:4000/python/2025/01/06/convert-wav-mp3.html" rel="alternate" type="text/html" title="convert wav mp3" /><published>2025-01-06T00:00:00+00:00</published><updated>2025-01-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/python/2025/01/06/convert-wav-mp3</id><content type="html" xml:base="http://0.0.0.0:4000/python/2025/01/06/convert-wav-mp3.html"><![CDATA[<p>Here’s how to convert a WAV file to MP3 in Python.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from pydub import AudioSegment

def convert_wav_to_mp3(wav_file, mp3_file):
    """Converts a WAV file to MP3."""

    sound = AudioSegment.from_wav(wav_file)
    sound.export(mp3_file, format="mp3")

if __name__ == "__main__":
    wav_file = "gettysburg10.wav"
    mp3_file = "output.mp3"
    convert_wav_to_mp3(wav_file, mp3_file)
    print(f"Converted {wav_file} to {mp3_file}")
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="python" /><category term="convert" /><category term="wav" /><category term="mp3" /><summary type="html"><![CDATA[Here’s how to convert a WAV file to MP3 in Python.]]></summary></entry><entry><title type="html">gcloud could not setup log file</title><link href="http://0.0.0.0:4000/linux/2025/01/06/gcloud-could-not-setup-log-file.html" rel="alternate" type="text/html" title="gcloud could not setup log file" /><published>2025-01-06T00:00:00+00:00</published><updated>2025-01-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2025/01/06/gcloud-could-not-setup-log-file</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2025/01/06/gcloud-could-not-setup-log-file.html"><![CDATA[<p>I was getting this error whenever Apache runs a gcloud command.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>WARNING: Could not setup log file in /usr/share/httpd/.config/gcloud/logs, 
(Error: Could not create directory [/usr/share/httpd/.config/gcloud/logs/2025.01.06]: Permission denied.

Please verify that you have permissions to write to the parent directory..
The configuration directory may not be writable. To learn more, see https://cloud.google.com/sdk/docs/configurations#creating_a_configuration
ERROR: (gcloud.compute.disks.list) Could not create directory [/usr/share/httpd/.config/gcloud]: Permission denied.

Please verify that you have permissions to write to the parent directory.
</code></pre></div></div>

<p>So, here’s the fix. The .config directory under /usr/share/httpd/ is missing.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir /usr/share/httpd/.config
chown -R apache:apache /usr/share/httpd/.config 
</code></pre></div></div>

<p>Create the directory and change ownership to apache:apache.</p>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="gcloud" /><category term="setup" /><category term="log" /><category term="files" /><summary type="html"><![CDATA[I was getting this error whenever Apache runs a gcloud command.]]></summary></entry><entry><title type="html">hls player</title><link href="http://0.0.0.0:4000/linux/2025/01/06/hls-player.html" rel="alternate" type="text/html" title="hls player" /><published>2025-01-06T00:00:00+00:00</published><updated>2025-01-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2025/01/06/hls-player</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2025/01/06/hls-player.html"><![CDATA[<p>Here’s an HLS video player using hls.js.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;html&gt;
  &lt;head&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/hls.js/0.5.14/hls.js"&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;&lt;video id="video" controls muted autoplay style="width: 80%"&gt;&lt;/video&gt;&lt;/p&gt;

    &lt;script&gt;
        var video = document.getElementById('video');
        var videoSrc = '/bunny/output.m3u8';
    
        // Initialize HLS.js if supported
        if (Hls.isSupported()) {
            var hls = new Hls();
            hls.loadSource(videoSrc);
            hls.attachMedia(video);
            hls.on(Hls.Events.MANIFEST_PARSED, function () {
                video.muted = true;
                video.play();
            });
        } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
            video.src = videoSrc;
        }
    
        // Assuming you have a reference to your video element
        const videoElement = document.getElementById('video');
    
        // Style the video element to center it both horizontally and vertically
        videoElement.style.display = 'block'; // Ensure it behaves like a block element
        videoElement.style.margin = '0 auto'; // Center it horizontally
        videoElement.style.position = 'absolute'; // Position it absolutely to center vertically
        videoElement.style.top = '50%'; // Vertically center
        videoElement.style.left = '50%'; // Horizontally center
        videoElement.style.transform = 'translate(-50%, -50%)'; // Adjust for exact centering
        videoElement.style.maxWidth = '90%'; // Optional: limit the video size to 90% of the screen width
        videoElement.style.maxHeight = '80vh'; // Optional: limit the video height to 80% of the viewport height
    
        // Create a button to unmute the player
        const unmuteButton = document.createElement('button');
        unmuteButton.textContent = 'Unmute';
    
        // Style the button to make it bigger
        unmuteButton.style.fontSize = '30px'; // Larger font size
        unmuteButton.style.padding = '20px 40px'; // Larger button size
        unmuteButton.style.backgroundColor = '#007BFF'; // Button color
        unmuteButton.style.color = 'white'; // Text color
        unmuteButton.style.border = 'none'; // Remove border
        unmuteButton.style.borderRadius = '10px'; // Rounded corners
        unmuteButton.style.cursor = 'pointer'; // Pointer cursor on hover
        unmuteButton.style.position = 'absolute'; // Absolute positioning
        unmuteButton.style.top = '50%'; // Vertically center
        unmuteButton.style.left = '50%'; // Horizontally center
        unmuteButton.style.transform = 'translate(-50%, -50%)'; // Adjust for exact centering
    
        // Add an event listener to the button
        unmuteButton.addEventListener('click', () =&gt; {
            videoElement.muted = false; // Unmute the video
            unmuteButton.remove(); // Remove the button once clicked
        });
 
        // Add the button to the DOM
        document.body.appendChild(unmuteButton);
 
   &lt;/script&gt;
  &lt;/body&gt;
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="hls" /><category term="player" /><category term="video" /><category term="streaming" /><summary type="html"><![CDATA[Here’s an HLS video player using hls.js.]]></summary></entry></feed>