<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2023-12-18T18:17:11+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">uly.me</title><subtitle></subtitle><entry><title type="html">Strip new lines on variables</title><link href="http://0.0.0.0:4000/linux/2023/12/18/strip-new-lines-on-variables.html" rel="alternate" type="text/html" title="Strip new lines on variables" /><published>2023-12-18T00:00:00+00:00</published><updated>2023-12-18T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2023/12/18/strip-new-lines-on-variables</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/12/18/strip-new-lines-on-variables.html"><![CDATA[<p>I had problems echoing four variables into one line. There seem to be some carriage return or new line somewhere that’s not visible.</p>

<p>So, here’s a line of code that will strip any new line or carriage return in the variable, and then use printf to display the variables on one line.</p>

<p>Strip the new lines.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>efs="${efs//$'\n'/ }"
name="${name//$'\n'/}"
total="${total//$'\n'/ }"
mesg="${mesg//$'\n'/}"
</code></pre></div></div>

<p>Now print them using printf on one line.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>printf "%-30s %-40s %-20s %-30s\n" "$efs" "$new" "$total" "$mesg"
</code></pre></div></div>

<p>With that code, I’m now able to format my report nicely without the extra new lines.</p>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="strip" /><category term="new lines" /><category term="variables" /><category term="bash" /><category term="echo" /><summary type="html"><![CDATA[I had problems echoing four variables into one line. There seem to be some carriage return or new line somewhere that’s not visible.]]></summary></entry><entry><title type="html">Multiple github accounts</title><link href="http://0.0.0.0:4000/linux/2023/12/17/multiple-github-accounts.html" rel="alternate" type="text/html" title="Multiple github accounts" /><published>2023-12-17T00:00:00+00:00</published><updated>2023-12-17T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2023/12/17/multiple-github-accounts</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/12/17/multiple-github-accounts.html"><![CDATA[<p>I have two Github accounts. The first account was cloned using HTTPS. Instead of messing around with multiple accounts with your credentials, I’ve decided to just clone the second repo using SSH. This was mainly done to avoid setting up multiple accounts and simplify use.</p>

<ul>
  <li>First repo - cloned using HTTPS</li>
  <li>Second repo - cloned using SSH</li>
</ul>

<p>The first repo requires a github key. The first time a repo is cloned, you’ll be prompted to supply the key. It’s kept in the <strong>~/.git-credentials</strong> on the local desktop.</p>

<p>The second repo requires a ssh key to be generated locally on your desktop which will need to be uploaded to github for authentication.</p>]]></content><author><name>ulysses</name></author><category term="linux" /><category term="github" /><category term="multiple" /><category term="accounts" /><summary type="html"><![CDATA[I have two Github accounts. The first account was cloned using HTTPS. Instead of messing around with multiple accounts with your credentials, I’ve decided to just clone the second repo using SSH. This was mainly done to avoid setting up multiple accounts and simplify use.]]></summary></entry><entry><title type="html">Using internal links</title><link href="http://0.0.0.0:4000/linux/2023/12/17/using-internal-links.html" rel="alternate" type="text/html" title="Using internal links" /><published>2023-12-17T00:00:00+00:00</published><updated>2023-12-17T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2023/12/17/using-internal-links</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/12/17/using-internal-links.html"><![CDATA[<p>Here’s how to use internal links within Jekyll. Use this format.</p>

<p><strong>[Some Link]({% post_url 2010-07-21-name-of-post %})</strong></p>

<p>I had to convert code to HTML characters to render properly.</p>]]></content><author><name>ulysses</name></author><category term="Linux" /><category term="jekyll" /><category term="internal" /><category term="links" /><summary type="html"><![CDATA[Here’s how to use internal links within Jekyll. Use this format.]]></summary></entry><entry><title type="html">Editing multiple files</title><link href="http://0.0.0.0:4000/linux/2023/12/16/editing-multiple-files.html" rel="alternate" type="text/html" title="Editing multiple files" /><published>2023-12-16T00:00:00+00:00</published><updated>2023-12-16T00:00:00+00:00</updated><id>http://0.0.0.0:4000/linux/2023/12/16/editing-multiple-files</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/12/16/editing-multiple-files.html"><![CDATA[<p>Editing 1000+ files is not fun. Here’s a script that cycles through certain files in a directory and performs a search and replace.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/bash
for filename in 20*.md; do
  sed -i -e 's/author: Ulysses/author: ulysses/g' $filename
done
</code></pre></div></div>

<p>In this particular script, it looks for files starting with 20 with an extension of .md.</p>

<p>The script uses the <strong>sed command</strong> to perform search and replace.</p>]]></content><author><name>ulysses</name></author><category term="Linux" /><category term="edit" /><category term="multiple" /><category term="files" /><category term="sed" /><summary type="html"><![CDATA[Editing 1000+ files is not fun. Here’s a script that cycles through certain files in a directory and performs a search and replace.]]></summary></entry><entry><title type="html">Switching from wordpress to jekyll</title><link href="http://0.0.0.0:4000/wp/2023/12/16/switching-from-wordpress-to-jekyll.html" rel="alternate" type="text/html" title="Switching from wordpress to jekyll" /><published>2023-12-16T00:00:00+00:00</published><updated>2023-12-16T00:00:00+00:00</updated><id>http://0.0.0.0:4000/wp/2023/12/16/switching-from-wordpress-to-jekyll</id><content type="html" xml:base="http://0.0.0.0:4000/wp/2023/12/16/switching-from-wordpress-to-jekyll.html"><![CDATA[<p>I recently migrated this blog from WordPress to Jekyll due to several reasons.</p>

<p>It came down to these three reasons:</p>

<ul>
  <li>Cost</li>
  <li>Speed</li>
  <li>Security</li>
</ul>

<ol>
  <li>Cost. Jekyll generates static websites, meaning it can be hosted freely at Github. No more hosted VM’s. That’s a savings of $120 per year.</li>
  <li>Speed. Since Jekyll pages are static HTML pages, websites loads much faster. There are no more PHP, extra plugins or databases that slow down pages.</li>
  <li>Security. Since Jekyll pages are static files, they do not need a LAMP stack. So no more OS, PHP, plugins or MySQL databases to securely maintain.</li>
</ol>

<p>It’s a win win. The migration was quick and easy, but not it’s not entirely a 100% bug-free. I had to tweak Jekyll templates here and there to get it to look the way I wanted it. There are a ton of articles out there that covers the Jeklly to WordPress migration. I’m not going to cover the migration process here step by step. To quickly summarize, you’ll need to install a Jekyll exporter plugin in WordPress to export your posts. You can then import your posts into Jekyll and tweak Jekyll the way you want it. That’s it in a nutshell.</p>

<p>By the way, I’m running Jekyll in a Docker. If you are interested, here are the <a href="/linux/2022/08/31/jekyll-on-docker-container.html">instructions</a> to run Jekyll in a Docker container.</p>]]></content><author><name>ulysses</name></author><category term="wp" /><category term="wordpress" /><category term="switching" /><category term="jekyll" /><summary type="html"><![CDATA[I recently migrated this blog from WordPress to Jekyll due to several reasons.]]></summary></entry><entry><title type="html">PHP not able to run gcloud commands via shell_exec</title><link href="http://0.0.0.0:4000/cloud/2023/12/15/php-not-able-to-run-gcloud-via-shell-exec.html" rel="alternate" type="text/html" title="PHP not able to run gcloud commands via shell_exec" /><published>2023-12-15T00:00:00+00:00</published><updated>2023-12-15T00:00:00+00:00</updated><id>http://0.0.0.0:4000/cloud/2023/12/15/php-not-able-to-run-gcloud-via-shell-exec</id><content type="html" xml:base="http://0.0.0.0:4000/cloud/2023/12/15/php-not-able-to-run-gcloud-via-shell-exec.html"><![CDATA[<p>I ran into an issue with PHP not able to run gcloud commands via shell_exec. It turned out to be a permission issue.</p>

<p>I ended up granting the <strong>apache</strong> user access to <strong>/usr/share/httpd/.config</strong> directory which was missing.</p>

<p>Google SDK needs write access to this directory. I ran the commands below and it worked after the changes.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir /usr/share/httpd/.config
chown apache:root /usr/share/httpd/.config
</code></pre></div></div>]]></content><author><name>ulysses</name></author><category term="Cloud" /><category term="php" /><category term="shell_exec" /><category term="permissions" /><category term="config" /><summary type="html"><![CDATA[I ran into an issue with PHP not able to run gcloud commands via shell_exec. It turned out to be a permission issue.]]></summary></entry><entry><title type="html">Hiding Passwords Using OpenSSL</title><link href="http://0.0.0.0:4000/linux/2023/10/31/hiding-passwords-using-openssl.html" rel="alternate" type="text/html" title="Hiding Passwords Using OpenSSL" /><published>2023-10-31T17:06:54+00:00</published><updated>2023-10-31T17:06:54+00:00</updated><id>http://0.0.0.0:4000/linux/2023/10/31/hiding-passwords-using-openssl</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/10/31/hiding-passwords-using-openssl.html"><![CDATA[<p>How to hide main password on Linux using OpenSSL.</p>

<p>Run this on a web server once.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ echo "SecretPassword" | openssl enc -aes-256-cbc -md sha512 -a -salt -pass pass:NotSoSecretPassword &gt; secret.txt  
$ chmod 600 secret.txt
</code></pre></div></div>

<p>On client machine, download the secret file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ curl https://webserver/some/dir/secret.txt --output -s secret.txt
</code></pre></div></div>

<p>To retrieve the secret password, run the code below. For added measure, delete secret.txt file afterwards.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cat secret.txt | openssl enc -aes-256-cbc -md sha512 -a -d -salt -pass pass:NotSoSecretPassword
$rm -f secret.txt
</code></pre></div></div>

<p>In addition, you can rotate the NotSoSecretPassword to make it more secure.</p>]]></content><author><name>ulysses</name></author><category term="Linux" /><category term="hide" /><category term="obfuscate" /><category term="openssl" /><category term="password" /><summary type="html"><![CDATA[How to hide main password on Linux using OpenSSL.]]></summary></entry><entry><title type="html">Install Latest Terraform via Homebrew</title><link href="http://0.0.0.0:4000/linux/2023/10/27/install-latest-terraform-via-homebrew.html" rel="alternate" type="text/html" title="Install Latest Terraform via Homebrew" /><published>2023-10-27T14:40:49+00:00</published><updated>2023-10-27T14:40:49+00:00</updated><id>http://0.0.0.0:4000/linux/2023/10/27/install-latest-terraform-via-homebrew</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/10/27/install-latest-terraform-via-homebrew.html"><![CDATA[<p>As of this writing, the latest Terraform version supported by Homebrew is version 1.5.7. It’s a bit outdated considering the latest Terraform version is 1.6.2. To force Homebrew to install the latest version of Terraform, run the following commands from your MacOS Terminal. But prior to that, check your version first.</p>

<p>Check current version</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform --version
Terraform v1.5.7
on darwin_amd64
</code></pre></div></div>

<p>Upgrade Terraform</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ brew tap hashicorp/tap
$ brew install hashicorp/tap/terraform
</code></pre></div></div>

<p>Check version again</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform --version
Terraform v1.6.2
on darwin_amd64
</code></pre></div></div>

<p>That’s it.</p>]]></content><author><name>ulysses</name></author><category term="Linux" /><category term="homebrew" /><category term="install" /><category term="latest" /><category term="terraform" /><summary type="html"><![CDATA[As of this writing, the latest Terraform version supported by Homebrew is version 1.5.7. It’s a bit outdated considering the latest Terraform version is 1.6.2. To force Homebrew to install the latest version of Terraform, run the following commands from your MacOS Terminal. But prior to that, check your version first.]]></summary></entry><entry><title type="html">YouTube Thumbnail</title><link href="http://0.0.0.0:4000/linux/2023/10/26/youtube-thumbnail.html" rel="alternate" type="text/html" title="YouTube Thumbnail" /><published>2023-10-26T18:40:51+00:00</published><updated>2023-10-26T18:40:51+00:00</updated><id>http://0.0.0.0:4000/linux/2023/10/26/youtube-thumbnail</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/10/26/youtube-thumbnail.html"><![CDATA[<p>When uploading videos, Youtube gives you an option to upload your own thumbnails. If you want to use your own pics, you can format them to 1280×720 pixels and use it as a thumbnail. The script below will resize any image regardless of the original size to 1280×720 pixels using the convert utility of ImageMagick. The conversion may crop the edges of your image if it’s not 16:9 or 1.777 format. The script will also resize an image in portrait format.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/bash
cd /home/ulysses/Pictures/jpg
image=$1
test=`convert $image -format "%[fx:(w/h&gt;1)?1:0]" info:`
if [ $test -eq 1 ]; then
    convert $image -resize 1280x720! 720_$image
else
    convert $image -resize 720x1280! 720_$image
fi
</code></pre></div></div>

<p>Enjoy.</p>]]></content><author><name>ulysses</name></author><category term="Linux" /><category term="convert" /><category term="imagemagick" /><category term="thumbnail" /><category term="upload" /><category term="youtube" /><summary type="html"><![CDATA[When uploading videos, Youtube gives you an option to upload your own thumbnails. If you want to use your own pics, you can format them to 1280×720 pixels and use it as a thumbnail. The script below will resize any image regardless of the original size to 1280×720 pixels using the convert utility of ImageMagick. The conversion may crop the edges of your image if it’s not 16:9 or 1.777 format. The script will also resize an image in portrait format.]]></summary></entry><entry><title type="html">Search Second Column for Characters</title><link href="http://0.0.0.0:4000/linux/2023/10/24/search-second-column-for-characters.html" rel="alternate" type="text/html" title="Search Second Column for Characters" /><published>2023-10-24T19:42:05+00:00</published><updated>2023-10-24T19:42:05+00:00</updated><id>http://0.0.0.0:4000/linux/2023/10/24/search-second-column-for-characters</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2023/10/24/search-second-column-for-characters.html"><![CDATA[<p>How to search the second column for string starting with.</p>

<p>Here are the contents of results.txt.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>John 10
Mario 12
Derek 15
Mark 20
Matt 25
</code></pre></div></div>

<p>Display only individuals that are older than 20 using awk.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>awk '$2 ~ /^20/' results.txt
</code></pre></div></div>

<p>Result.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mark 20
Matt 25
</code></pre></div></div>

<p>You can easily adjust this to other columns.</p>]]></content><author><name>ulysses</name></author><category term="Linux" /><category term="awk" /><category term="bash" /><category term="column" /><category term="display" /><category term="search" /><category term="second" /><summary type="html"><![CDATA[How to search the second column for string starting with.]]></summary></entry></feed>